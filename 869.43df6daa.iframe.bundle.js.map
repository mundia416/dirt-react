{"version":3,"file":"869.43df6daa.iframe.bundle.js","mappings":";AAKA;AAYA;ACDA;AAOA","sources":["webpack://@mundia/dirt-react/./src/components/wrapper/index.tsx","webpack://@mundia/dirt-react/./src/components/alert/content/index.tsx"],"sourcesContent":["import React from 'react';\nimport styled from \"styled-components\";\n\n\nconst Div = styled.div<{ isGray: any }>`\n  background-color: ${({ theme, isGray }) => (isGray ? theme.gray50 : \"white\")};\n`;\n\n\ntype Props = {\n    onClick?: () => void,\n    isGray?: boolean,\n    className?: string,\n    children?: any\n}\n/**\n * a wrapper is simply a div element \n */\nconst Wrapper = ({ onClick, isGray, className, children }: Props) => {\n    return (\n        <Div\n            onClick={onClick}\n            isGray={isGray}\n            className={className}>\n            {children}\n        </Div>\n    );\n};\n\nWrapper.propTypes = {\n\n};\n\nexport default Wrapper;","import React from 'react';\nimport WarningSVG from '../images/warning.svg'\nimport SuccessSVG from '../images/success.svg'\nimport ErrorSVG from '../images/error.svg'\nimport InfoSVG from '../images/info.svg'\nimport DismissSVG from '../images/dismiss.svg'\nimport ArrowRightSVG from '../images/arrow-right.svg'\nimport Text from '../../text'\nimport styled from 'styled-components'\nimport { useFadeAnimChild } from '../../use-fade-anim'\nimport Button from '../../button'\nimport { AlertProps } from '../AlertProps';\nimport IconButton from '../../iconbutton';\nimport Icon from '../../icon';\n\nconst Container = styled.div<{ fadeOut: any } >`\n${({ fadeOut, theme }) => fadeOut ? theme.fadeOutSize : theme.fadeInSize};\n`\n\ninterface Props extends AlertProps {\n    stopRender: () => void\n}\n\nconst Content = ({ showDismiss, link, variant, title, content, className, onPositiveClick,\n    onNegativeClick, positiveText, negativeText, onCloseComplete, stopRender, isShown }: Props) => {\n\n    const { close, fadeOut, onAnimationEnd } = useFadeAnimChild({ isShown, stopRender, onCloseComplete })\n    let variantStyle\n    let icon\n    let iconStyle\n    let titleStyle\n    let contentStyle\n    let buttonStyle\n    let linkStyle\n\n    switch (variant) {\n        case 'warning':\n            variantStyle = ` bg-yellow-100`\n            icon = <WarningSVG />\n            iconStyle = 'text-yellow-700'\n            titleStyle = 'text-yellow-900'\n            contentStyle = 'text-yellow-800'\n            buttonStyle = 'text-yellow-900 hover:text-yellow-800'\n            linkStyle = 'text-yellow-800 hover:text-yellow-700'\n\n            break\n        case 'error':\n            variantStyle = ` bg-red-100`\n            icon = <ErrorSVG />\n            iconStyle = 'text-red-700'\n            titleStyle = 'text-red-900'\n            contentStyle = 'text-red-800'\n            buttonStyle = 'text-red-900 hover:text-red-800'\n            linkStyle = 'text-red-800 hover:text-red-700'\n\n            break\n        case 'success':\n            variantStyle = ` bg-green-100`\n            icon = <SuccessSVG />\n            iconStyle = 'text-green-700'\n            titleStyle = 'text-green-900'\n            contentStyle = 'text-green-800'\n            buttonStyle = 'text-green-900 hover:text-green-800'\n            linkStyle = 'text-green-800 hover:text-green-700'\n\n            break\n        case 'info':\n            variantStyle = ` bg-blue-100`\n            icon = <InfoSVG />\n            iconStyle = 'text-blue-700'\n            titleStyle = 'text-blue-900'\n            contentStyle = 'text-blue-800'\n            buttonStyle = 'text-blue-900 hover:text-blue-800'\n            linkStyle = 'text-blue-800 hover:text-blue-700'\n\n            break\n    }\n\n    return (\n        <Container\n            onAnimationEnd={onAnimationEnd}\n            fadeOut={fadeOut}\n            className={`flex p-2 rounded-md ${variantStyle} ${className}`}>\n\n\n            <Icon\n                color\n                hasBackground={false}\n                png\n                size\n                className={`mt-4 h-6 w-6 mx-2 ${iconStyle}`}\n                src={icon} />\n\n\n            <div className='my-4 mr-4'>\n                <Text\n                    type='text-small'\n                    tailwind={`text-gray-900 font-medium ${titleStyle}`}\n                    color>{title}</Text>\n\n                <Text\n                    tailwind={`${contentStyle}`}\n                    type='text-small'\n                >{content}</Text>\n\n                {positiveText || negativeText &&\n\n                    <div className='flex'>\n                        <Button\n                            color\n                            size='extra-small'\n                            hover\n                            variant='text'\n                            className={`tracking-tight  pl-0  ${buttonStyle}`}\n                            onClick={onPositiveClick}\n                        >{positiveText}</Button>\n                        <Button\n                            color\n                            hover\n                            size='extra-small'\n                            variant='text'\n                            className={`tracking-tight ${buttonStyle}`}\n                            onClick={onNegativeClick}\n                        >{negativeText}</Button>\n\n                    </div>\n                }\n            </div>\n\n            {link &&\n                <Button\n                    color\n                    size='extra-small'\n                    hover\n                    variant='text'\n                    iconRight={ArrowRightSVG}\n                    tailwind={`tracking-tight ml-6  ${linkStyle}`}\n                    onClick={() => console.log(/**TODO GO TO THE LINK SUPPLIED */)}\n                >{link.title}</Button>\n            }\n\n\n            {showDismiss &&\n                <div className='h-full flex items-center'>\n                    <IconButton\n                        \n                        \n                        png\n                        hasBackground={false}\n                        src={DismissSVG}\n                        className={` ml-6 ${buttonStyle}`}\n                        onClick={() => close()}\n                    />\n                </div>\n            }\n\n        </Container>\n    );\n};\n\n\n\nexport default Content;"],"names":[],"sourceRoot":""}