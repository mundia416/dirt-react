{"version":3,"file":"925.f4c30fae.iframe.bundle.js","mappings":";AAWA;AAOA","sources":["webpack://@mundia/dirt-react/./src/components/alert/content/index.tsx"],"sourcesContent":["import React, { ForwardRefExoticComponent, RefAttributes, SVGProps } from 'react';\nimport Text from '../../text'\nimport styled from 'styled-components'\nimport { useFadeAnimChild } from '../../use-fade-anim'\nimport Button from '../../button'\nimport { AlertProps } from '../AlertProps';\nimport { ArrowRightIcon, CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { InformationCircleIcon } from '@heroicons/react/24/solid';\nimport AnimatedDiv from '../../animated-div';\n\nconst Container = styled.div<{ fadeOut: any } >`\n${({ fadeOut, theme }) => fadeOut ? theme.fadeOutSize : theme.fadeInSize};\n`\n\ninterface Props extends AlertProps {\n    stopRender: () => void\n}\n\nconst Content = ({ showDismiss, link, variant, title, content, className, onPositiveClick,\n    onNegativeClick, positiveText, negativeText, onCloseComplete, stopRender, isShown }: Props) => {\n\n    const { close, fadeOut, onAnimationEnd } = useFadeAnimChild({ isShown, stopRender, onCloseComplete })\n    let variantStyle\n    let icon: { icon: ForwardRefExoticComponent<Omit<SVGProps<SVGSVGElement>, \"ref\"> & { title?: string | undefined; titleId?: string | undefined; } & RefAttributes<SVGSVGElement>> | undefined } | undefined = { icon: undefined }\n    let iconStyle\n    let titleStyle\n    let contentStyle\n    let buttonStyle\n    let linkStyle\n\n    switch (variant) {\n        case 'warning':\n            variantStyle = ` bg-yellow-100`\n            icon.icon = ExclamationTriangleIcon\n            iconStyle = 'text-yellow-700'\n            titleStyle = 'text-yellow-900'\n            contentStyle = 'text-yellow-800'\n            buttonStyle = 'text-yellow-900 hover:text-yellow-800'\n            linkStyle = 'text-yellow-800 hover:text-yellow-700'\n\n            break\n        case 'error':\n            variantStyle = ` bg-red-100`\n            icon.icon = ExclamationCircleIcon\n            iconStyle = 'text-red-700'\n            titleStyle = 'text-red-900'\n            contentStyle = 'text-red-800'\n            buttonStyle = 'text-red-900 hover:text-red-800'\n            linkStyle = 'text-red-800 hover:text-red-700'\n\n            break\n        case 'success':\n            variantStyle = ` bg-green-100`\n            icon.icon = CheckCircleIcon\n            iconStyle = 'text-green-700'\n            titleStyle = 'text-green-900'\n            contentStyle = 'text-green-800'\n            buttonStyle = 'text-green-900 hover:text-green-800'\n            linkStyle = 'text-green-800 hover:text-green-700'\n\n            break\n        case 'info':\n            variantStyle = ` bg-blue-100`\n            icon.icon = InformationCircleIcon\n            iconStyle = 'text-blue-500'\n            titleStyle = 'text-blue-900'\n            contentStyle = 'text-blue-800'\n            buttonStyle = 'text-blue-900 hover:text-blue-800'\n            linkStyle = 'text-blue-800 hover:text-blue-700'\n            break\n    }\n\n    return (\n        <AnimatedDiv>\n            <Container\n                onAnimationEnd={onAnimationEnd}\n                fadeOut={fadeOut}\n                className={`flex p-2 rounded-md ${variantStyle} ${className}`}>\n\n                {icon &&\n                    <icon.icon className={`mt-4 h-6 w-6 mx-2 ${iconStyle}`} />\n                }\n\n                <div className='my-4 mr-4'>\n                    <Text\n                        type='text-small'\n                        className={`text-gray-900 font-medium ${titleStyle}`}\n                        color>{title}</Text>\n\n                    <Text\n                        className={`${contentStyle}`}\n                        type='text-small'\n                    >{content}</Text>\n\n\n                    <div className='flex'>\n                        {positiveText &&\n                            <Button\n                                color\n                                size='extra-small'\n                                hover\n                                variant='text'\n                                className={`tracking-tight  pl-0  ${buttonStyle}`}\n                                onClick={onPositiveClick}\n                            >{positiveText}</Button>\n                        }\n\n                        {negativeText &&\n                            <Button\n                                color\n                                hover\n                                size='extra-small'\n                                variant='text'\n                                className={`tracking-tight ${buttonStyle}`}\n                                onClick={onNegativeClick}\n                            >{negativeText}</Button>\n                        }\n\n                    </div>\n\n                </div>\n\n                {link &&\n                    <Button\n                        color\n                        size='extra-small'\n                        hover\n                        variant='text'\n                        trailingIcon={ArrowRightIcon}\n                        className={`tracking-tight ml-6  ${linkStyle}`}\n                        onClick={() => console.log(/**TODO GO TO THE LINK SUPPLIED */)}\n                    >{link.title}</Button>\n                }\n\n\n                {showDismiss &&\n                    <div className='h-full flex items-center'>\n                        <Button\n                            variant='text'\n                            leadingIcon={XMarkIcon}\n                            className={` ml-6 ${buttonStyle}`}\n                            onClick={() => close()}\n                        />\n                    </div>\n                }\n\n            </Container>\n        </AnimatedDiv>\n\n    );\n};\n\n\n\nexport default Content;"],"names":[],"sourceRoot":""}