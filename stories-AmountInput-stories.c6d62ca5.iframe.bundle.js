"use strict";(self.webpackChunk_mundia_dirt_react=self.webpackChunk_mundia_dirt_react||[]).push([[81],{"./src/stories/AmountInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,Default:()=>Default,MaxValue:()=>MaxValue,MinMaxValue:()=>MinMaxValue,MinValue:()=>MinValue,Required:()=>Required,WithHelpText:()=>WithHelpText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_hook_form__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.mjs"),_components_amountinput__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/amountinput/index.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/AmountInput",component:_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A},Default=()=>{const{control,handleSubmit,watch}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:"5000000"}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:handleSubmit((data=>alert(JSON.stringify(data))))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount",placeholder:"Enter amount",helpText:"Enter a number. Commas will be added automatically."}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginTop:12}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,"Raw value:")," ",watch("amount")),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",style:{marginTop:12}},"Submit"))},Required=()=>{const{control,handleSubmit,formState}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:""}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:handleSubmit((data=>alert(JSON.stringify(data))))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount",placeholder:"Enter amount",rules:{required:"Amount is required"}}),formState.errors.amount&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{color:"red"}},formState.errors.amount.message),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",style:{marginTop:12}},"Submit"))},WithHelpText=()=>{const{control}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:""}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount",placeholder:"Enter amount",helpText:"This is a custom help text for the amount input."})},MinValue=()=>{const{control,handleSubmit,formState}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:""}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:handleSubmit((data=>alert(JSON.stringify(data))))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount (Min 1000)",placeholder:"Enter amount",min:1e3}),formState.errors.amount&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{color:"red"}},formState.errors.amount.message),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",style:{marginTop:12}},"Submit"))},MaxValue=()=>{const{control,handleSubmit,formState}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:""}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:handleSubmit((data=>alert(JSON.stringify(data))))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount (Max 5000)",placeholder:"Enter amount",max:5e3}),formState.errors.amount&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{color:"red"}},formState.errors.amount.message),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",style:{marginTop:12}},"Submit"))},MinMaxValue=()=>{const{control,handleSubmit,formState}=(0,react_hook_form__WEBPACK_IMPORTED_MODULE_2__.mN)({defaultValues:{amount:""}});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("form",{onSubmit:handleSubmit((data=>alert(JSON.stringify(data))))},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{name:"amount",control,label:"Amount (Min 1000, Max 5000)",placeholder:"Enter amount",min:1e3,max:5e3}),formState.errors.amount&&react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{color:"red"}},formState.errors.amount.message),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{type:"submit",style:{marginTop:12}},"Submit"))},Controlled=()=>{const[amount,setAmount]=react__WEBPACK_IMPORTED_MODULE_0__.useState("123456");return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_amountinput__WEBPACK_IMPORTED_MODULE_1__.A,{label:"Controlled Amount",placeholder:"Enter amount",value:amount,onChange:setAmount,helpText:"This is a controlled input using value and onChange."}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginTop:12}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("strong",null,"Raw value:")," ",amount))},__namedExportsOrder=["Default","Required","WithHelpText","MinValue","MaxValue","MinMaxValue","Controlled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control,\n    handleSubmit,\n    watch\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'5000000\'\n    }\n  });\n  const onSubmit: SubmitHandler<FormValues> = data => alert(JSON.stringify(data));\n  return <form onSubmit={handleSubmit(onSubmit)}>\n      <AmountInput name="amount" control={control} label="Amount" placeholder="Enter amount" helpText="Enter a number. Commas will be added automatically." />\n      <div style={{\n      marginTop: 12\n    }}>\n        <strong>Raw value:</strong> {watch(\'amount\')}\n      </div>\n      <button type="submit" style={{\n      marginTop: 12\n    }}>Submit</button>\n    </form>;\n}',...Default.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control,\n    handleSubmit,\n    formState\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'\'\n    }\n  });\n  const onSubmit: SubmitHandler<FormValues> = data => alert(JSON.stringify(data));\n  return <form onSubmit={handleSubmit(onSubmit)}>\n      <AmountInput name="amount" control={control} label="Amount" placeholder="Enter amount" rules={{\n      required: \'Amount is required\'\n    }} />\n      {formState.errors.amount && <div style={{\n      color: \'red\'\n    }}>{formState.errors.amount.message}</div>}\n      <button type="submit" style={{\n      marginTop: 12\n    }}>Submit</button>\n    </form>;\n}',...Required.parameters?.docs?.source}}},WithHelpText.parameters={...WithHelpText.parameters,docs:{...WithHelpText.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'\'\n    }\n  });\n  return <AmountInput name="amount" control={control} label="Amount" placeholder="Enter amount" helpText="This is a custom help text for the amount input." />;\n}',...WithHelpText.parameters?.docs?.source}}},MinValue.parameters={...MinValue.parameters,docs:{...MinValue.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control,\n    handleSubmit,\n    formState\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'\'\n    }\n  });\n  const onSubmit: SubmitHandler<FormValues> = data => alert(JSON.stringify(data));\n  return <form onSubmit={handleSubmit(onSubmit)}>\n      <AmountInput name="amount" control={control} label="Amount (Min 1000)" placeholder="Enter amount" min={1000} />\n      {formState.errors.amount && <div style={{\n      color: \'red\'\n    }}>{formState.errors.amount.message}</div>}\n      <button type="submit" style={{\n      marginTop: 12\n    }}>Submit</button>\n    </form>;\n}',...MinValue.parameters?.docs?.source}}},MaxValue.parameters={...MaxValue.parameters,docs:{...MaxValue.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control,\n    handleSubmit,\n    formState\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'\'\n    }\n  });\n  const onSubmit: SubmitHandler<FormValues> = data => alert(JSON.stringify(data));\n  return <form onSubmit={handleSubmit(onSubmit)}>\n      <AmountInput name="amount" control={control} label="Amount (Max 5000)" placeholder="Enter amount" max={5000} />\n      {formState.errors.amount && <div style={{\n      color: \'red\'\n    }}>{formState.errors.amount.message}</div>}\n      <button type="submit" style={{\n      marginTop: 12\n    }}>Submit</button>\n    </form>;\n}',...MaxValue.parameters?.docs?.source}}},MinMaxValue.parameters={...MinMaxValue.parameters,docs:{...MinMaxValue.parameters?.docs,source:{originalSource:'() => {\n  const {\n    control,\n    handleSubmit,\n    formState\n  } = useForm<FormValues>({\n    defaultValues: {\n      amount: \'\'\n    }\n  });\n  const onSubmit: SubmitHandler<FormValues> = data => alert(JSON.stringify(data));\n  return <form onSubmit={handleSubmit(onSubmit)}>\n      <AmountInput name="amount" control={control} label="Amount (Min 1000, Max 5000)" placeholder="Enter amount" min={1000} max={5000} />\n      {formState.errors.amount && <div style={{\n      color: \'red\'\n    }}>{formState.errors.amount.message}</div>}\n      <button type="submit" style={{\n      marginTop: 12\n    }}>Submit</button>\n    </form>;\n}',...MinMaxValue.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'() => {\n  const [amount, setAmount] = React.useState(\'123456\');\n  return <div>\n      <AmountInput label="Controlled Amount" placeholder="Enter amount" value={amount} onChange={setAmount} helpText="This is a controlled input using value and onChange." />\n      <div style={{\n      marginTop: 12\n    }}>\n        <strong>Raw value:</strong> {amount}\n      </div>\n    </div>;\n}',...Controlled.parameters?.docs?.source}}}}}]);