{"version":3,"file":"stories-Button-stories.cd859b36.iframe.bundle.js","mappings":";AAKA;AAYA;ACDA;AAOA","sources":["webpack://@mundia/dirt-react/./src/components/wrapper/index.tsx","webpack://@mundia/dirt-react/./src/components/alert/content/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Div = styled.div<{ isGray: any }>`\r\n  background-color: ${({ theme, isGray }) => (isGray ? theme.gray50 : \"white\")};\r\n`;\r\n\r\n\r\ntype Props = {\r\n    onClick?: () => void,\r\n    isGray?: boolean,\r\n    className?: string,\r\n    children?: any\r\n}\r\n/**\r\n * a wrapper is simply a div element \r\n */\r\nconst Wrapper = ({ onClick, isGray, className, children }: Props) => {\r\n    return (\r\n        <Div\r\n            onClick={onClick}\r\n            isGray={isGray}\r\n            className={className}>\r\n            {children}\r\n        </Div>\r\n    );\r\n};\r\n\r\nWrapper.propTypes = {\r\n\r\n};\r\n\r\nexport default Wrapper;","import React from 'react';\r\nimport WarningSVG from '../images/warning.svg'\r\nimport SuccessSVG from '../images/success.svg'\r\nimport ErrorSVG from '../images/error.svg'\r\nimport InfoSVG from '../images/info.svg'\r\nimport DismissSVG from '../images/dismiss.svg'\r\nimport ArrowRightSVG from '../images/arrow-right.svg'\r\nimport Text from '../../text'\r\nimport styled from 'styled-components'\r\nimport { useFadeAnimChild } from '../../use-fade-anim'\r\nimport Button from '../../button'\r\nimport { AlertProps } from '../AlertProps';\r\nimport IconButton from '../../iconbutton';\r\nimport Icon from '../../icon';\r\n\r\nconst Container = styled.div<{ fadeOut: any } >`\r\n${({ fadeOut, theme }) => fadeOut ? theme.fadeOutSize : theme.fadeInSize};\r\n`\r\n\r\ninterface Props extends AlertProps {\r\n    stopRender: () => void\r\n}\r\n\r\nconst Content = ({ showDismiss, link, variant, title, content, className, onPositiveClick,\r\n    onNegativeClick, positiveText, negativeText, onCloseComplete, stopRender, isShown }: Props) => {\r\n\r\n    const { close, fadeOut, onAnimationEnd } = useFadeAnimChild({ isShown, stopRender, onCloseComplete })\r\n    let variantStyle\r\n    let icon\r\n    let iconStyle\r\n    let titleStyle\r\n    let contentStyle\r\n    let buttonStyle\r\n    let linkStyle\r\n\r\n    switch (variant) {\r\n        case 'warning':\r\n            variantStyle = ` bg-yellow-100`\r\n            icon = <WarningSVG />\r\n            iconStyle = 'text-yellow-700'\r\n            titleStyle = 'text-yellow-900'\r\n            contentStyle = 'text-yellow-800'\r\n            buttonStyle = 'text-yellow-900 hover:text-yellow-800'\r\n            linkStyle = 'text-yellow-800 hover:text-yellow-700'\r\n\r\n            break\r\n        case 'error':\r\n            variantStyle = ` bg-red-100`\r\n            icon = <ErrorSVG />\r\n            iconStyle = 'text-red-700'\r\n            titleStyle = 'text-red-900'\r\n            contentStyle = 'text-red-800'\r\n            buttonStyle = 'text-red-900 hover:text-red-800'\r\n            linkStyle = 'text-red-800 hover:text-red-700'\r\n\r\n            break\r\n        case 'success':\r\n            variantStyle = ` bg-green-100`\r\n            icon = <SuccessSVG />\r\n            iconStyle = 'text-green-700'\r\n            titleStyle = 'text-green-900'\r\n            contentStyle = 'text-green-800'\r\n            buttonStyle = 'text-green-900 hover:text-green-800'\r\n            linkStyle = 'text-green-800 hover:text-green-700'\r\n\r\n            break\r\n        case 'info':\r\n            variantStyle = ` bg-blue-100`\r\n            icon = <InfoSVG />\r\n            iconStyle = 'text-blue-700'\r\n            titleStyle = 'text-blue-900'\r\n            contentStyle = 'text-blue-800'\r\n            buttonStyle = 'text-blue-900 hover:text-blue-800'\r\n            linkStyle = 'text-blue-800 hover:text-blue-700'\r\n\r\n            break\r\n    }\r\n\r\n    return (\r\n        <Container\r\n            onAnimationEnd={onAnimationEnd}\r\n            fadeOut={fadeOut}\r\n            className={`flex p-2 rounded-md ${variantStyle} ${className}`}>\r\n\r\n\r\n            <Icon\r\n                color\r\n                hasBackground={false}\r\n                png\r\n                size\r\n                className={`mt-4 h-6 w-6 mx-2 ${iconStyle}`}\r\n                src={icon} />\r\n\r\n\r\n            <div className='my-4 mr-4'>\r\n                <Text\r\n                    type='text-small'\r\n                    tailwind={`text-gray-900 font-medium ${titleStyle}`}\r\n                    color>{title}</Text>\r\n\r\n                <Text\r\n                    tailwind={`${contentStyle}`}\r\n                    type='text-small'\r\n                >{content}</Text>\r\n\r\n                {positiveText || negativeText &&\r\n\r\n                    <div className='flex'>\r\n                        <Button\r\n                            color\r\n                            size='extra-small'\r\n                            hover\r\n                            variant='text'\r\n                            className={`tracking-tight  pl-0  ${buttonStyle}`}\r\n                            onClick={onPositiveClick}\r\n                        >{positiveText}</Button>\r\n                        <Button\r\n                            color\r\n                            hover\r\n                            size='extra-small'\r\n                            variant='text'\r\n                            className={`tracking-tight ${buttonStyle}`}\r\n                            onClick={onNegativeClick}\r\n                        >{negativeText}</Button>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            {link &&\r\n                <Button\r\n                    color\r\n                    size='extra-small'\r\n                    hover\r\n                    variant='text'\r\n                    iconRight={ArrowRightSVG}\r\n                    tailwind={`tracking-tight ml-6  ${linkStyle}`}\r\n                    onClick={() => console.log(/**TODO GO TO THE LINK SUPPLIED */)}\r\n                >{link.title}</Button>\r\n            }\r\n\r\n\r\n            {showDismiss &&\r\n                <div className='h-full flex items-center'>\r\n                    <IconButton\r\n                        \r\n                        \r\n                        png\r\n                        hasBackground={false}\r\n                        src={DismissSVG}\r\n                        className={` ml-6 ${buttonStyle}`}\r\n                        onClick={() => close()}\r\n                    />\r\n                </div>\r\n            }\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Content;"],"names":[],"sourceRoot":""}