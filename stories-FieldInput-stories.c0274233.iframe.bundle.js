"use strict";(self.webpackChunk_mundia_dirt_react=self.webpackChunk_mundia_dirt_react||[]).push([[747],{"./src/stories/FieldInput.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CornerHelpText:()=>CornerHelpText,DatePicker:()=>DatePicker,Disabled:()=>Disabled,Error:()=>Error,Input:()=>Input,LeadingIcon:()=>LeadingIcon,LeadingText:()=>LeadingText,TextArea:()=>TextArea,TrailingIcon:()=>TrailingIcon,TrailingText:()=>TrailingText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FieldInput_stories});var react=__webpack_require__("./node_modules/react/index.js"),src=__webpack_require__("./src/index.tsx"),MagnifyingGlassIcon=__webpack_require__("./node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js");function LockClosedIcon({title,titleId,...props},svgRef){return react.createElement("svg",Object.assign({xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 24 24",strokeWidth:1.5,stroke:"currentColor","aria-hidden":"true","data-slot":"icon",ref:svgRef,"aria-labelledby":titleId},props),title?react.createElement("title",{id:titleId},title):null,react.createElement("path",{strokeLinecap:"round",strokeLinejoin:"round",d:"M16.5 10.5V6.75a4.5 4.5 0 1 0-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 0 0 2.25-2.25v-6.75a2.25 2.25 0 0 0-2.25-2.25H6.75a2.25 2.25 0 0 0-2.25 2.25v6.75a2.25 2.25 0 0 0 2.25 2.25Z"}))}const esm_LockClosedIcon=react.forwardRef(LockClosedIcon),FieldInput_stories={title:"Components/FieldInput",component:src.TZ,parameters:{layout:"centered"},argTypes:{}},Input={args:{element:"input",label:"Email Address"}},TextArea={args:{element:"text-area",label:"Description"}},LeadingIcon={args:{placeholder:"Search",leadingIcon:MagnifyingGlassIcon.A}},TrailingIcon={args:{trailingIcon:esm_LockClosedIcon,placeholder:"Password",type:"password"}},LeadingText={args:{leadingText:"+260"}},TrailingText={args:{trailingText:".com"}},Error={args:{error:!0,helpText:"This field cannot be empty"}},DatePicker={args:{type:"date"},render:args=>{const[dateValue,setDateValue]=(0,react.useState)("");return react.createElement("div",{className:"bg-red-500 w-[600px]"},react.createElement(src.TZ,{...args,value:dateValue,onChange:value=>{setDateValue(value),console.log("Date changed:",value)}}),react.createElement("div",{style:{marginTop:"10px",fontSize:"14px",color:"#666"}},"Selected date: ",dateValue||"None"))}},CornerHelpText={args:{cornerHelpText:"Optional",label:"Email"}},Disabled={args:{element:"input",label:"Email Address",disabled:!0}},__namedExportsOrder=["Input","TextArea","LeadingIcon","TrailingIcon","LeadingText","TrailingText","Error","DatePicker","CornerHelpText","Disabled"];Input.parameters={...Input.parameters,docs:{...Input.parameters?.docs,source:{originalSource:"{\n  args: {\n    element: 'input',\n    label: 'Email Address'\n  }\n}",...Input.parameters?.docs?.source}}},TextArea.parameters={...TextArea.parameters,docs:{...TextArea.parameters?.docs,source:{originalSource:"{\n  args: {\n    element: 'text-area',\n    label: 'Description'\n  }\n}",...TextArea.parameters?.docs?.source}}},LeadingIcon.parameters={...LeadingIcon.parameters,docs:{...LeadingIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'Search',\n    leadingIcon: MagnifyingGlassIcon\n  }\n}",...LeadingIcon.parameters?.docs?.source}}},TrailingIcon.parameters={...TrailingIcon.parameters,docs:{...TrailingIcon.parameters?.docs,source:{originalSource:"{\n  args: {\n    trailingIcon: LockClosedIcon,\n    placeholder: \"Password\",\n    type: 'password'\n  }\n}",...TrailingIcon.parameters?.docs?.source}}},LeadingText.parameters={...LeadingText.parameters,docs:{...LeadingText.parameters?.docs,source:{originalSource:"{\n  args: {\n    leadingText: '+260'\n  }\n}",...LeadingText.parameters?.docs?.source}}},TrailingText.parameters={...TrailingText.parameters,docs:{...TrailingText.parameters?.docs,source:{originalSource:"{\n  args: {\n    trailingText: '.com'\n  }\n}",...TrailingText.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:"{\n  args: {\n    error: true,\n    helpText: 'This field cannot be empty'\n  }\n}",...Error.parameters?.docs?.source}}},DatePicker.parameters={...DatePicker.parameters,docs:{...DatePicker.parameters?.docs,source:{originalSource:"{\n  args: {\n    type: 'date'\n    // pattern: 'yyyy-mm-dd',\n    // className: 'w-full',\n    // inputClassName: 'w-full'\n  },\n  render: args => {\n    const [dateValue, setDateValue] = useState<string>('');\n    return <div className='bg-red-500 w-[600px]'>\n        <FieldInput {...args} value={dateValue} onChange={value => {\n        setDateValue(value);\n        console.log('Date changed:', value);\n      }} />\n        <div style={{\n        marginTop: '10px',\n        fontSize: '14px',\n        color: '#666'\n      }}>\n          Selected date: {dateValue || 'None'}\n        </div>\n      </div>;\n  }\n}",...DatePicker.parameters?.docs?.source}}},CornerHelpText.parameters={...CornerHelpText.parameters,docs:{...CornerHelpText.parameters?.docs,source:{originalSource:"{\n  args: {\n    cornerHelpText: 'Optional',\n    label: 'Email'\n  }\n}",...CornerHelpText.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    element: 'input',\n    label: 'Email Address',\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}}}}]);